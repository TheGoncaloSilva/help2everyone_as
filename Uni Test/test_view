import unittest
from django.contrib.auth.models import AnonymousUser, User
from django.test import RequestFactory
from django.urls import reverse


from apps.event import views

pytestmark = unittest.mark.django_db


class TestMyView:
    def test_anonymous(self):
        req = RequestFactory().get(reverse("myapp:myview"))
        resp = views.MyView.as_view()(req)
        assert resp.status_code == 200


class TestMyCreateView:
    def test_authentication(self):
        req = RequestFactory().get(reverse("myapp:mycreateview"))
        resp = views.MyCreateView.as_view()(req)
        assert resp.status_code == 200

    def test_post(self):
        assert False is MyModel.objects.all().exists()
        resp = views.MyCreateView.as_view()(req)
        assert resp.status_code == 302
        assert resp.url == "/create_success/"       

class TestMyUpdateView:
    def test_authentication(self):
        resp = views.MyUpdateView.as_view()
        assert resp.status_code == 302, "Não está logado!"
        assert "login" in resp.url

        resp = views.MyUpdateView.as_view()
        assert resp.status_code == 200

    def test_post(self):

        resp = views.MyUpdateView.as_view()
        assert resp.status_code == 302, "Sucesso"
        assert "/update_success/" in resp.url


    def test_invalid_data(self):
        resp = views.MyUpdateView.as_view()
        assert resp.status_code == 200
    